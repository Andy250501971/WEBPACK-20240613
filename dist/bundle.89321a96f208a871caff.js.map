{"version":3,"file":"bundle.89321a96f208a871caff.js","mappings":"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","sources":["webpack:///./form.js","webpack:///./imputControl.js","webpack:///./module.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["const form = document.forms['form'];\r\nconst button = form.querySelector('button[type=\"submit\"]');\r\n\r\nconst inputArr = Array.from(form.elements);\r\nconst validInputArr = [];\r\n\r\n// Инициализация атрибута и массива с валидными элементами\r\ninputArr.forEach((el) => {\r\n    if (el.hasAttribute(\"data-reg\")) {\r\n        el.setAttribute(\"is-valid\", \"0\");\r\n        validInputArr.push(el);\r\n    }\r\n});\r\n\r\nconsole.log(validInputArr);\r\n\r\nform.addEventListener('input', inputHandler);\r\n\r\nform.addEventListener('submit', function(e) {\r\n    e.preventDefault(); // Отменяем стандартную отправку формы\r\n    buttonHandler.call(this, e); // При необходимости, привязка контекста к форме\r\n});\r\n\r\nfunction inputHandler({ target }) {\r\n    if (target.hasAttribute(\"data-reg\")) {\r\n        inputCheck(target);\r\n    }\r\n    toggleButtonState();\r\n}\r\n\r\nfunction inputCheck(el) {\r\n    const inputValue = el.value;\r\n    const inputReg = el.getAttribute(\"data-reg\");\r\n    const reg = new RegExp(inputReg);\r\n\r\n    let isInputValid = reg.test(inputValue);\r\n\r\n    if (el.hasAttribute(\"required\")) {\r\n        isInputValid = isInputValid && inputValue.trim() !== '';\r\n    }\r\n\r\n    if (isInputValid) {\r\n        el.style.color = \"#44751e\";\r\n        el.setAttribute(\"is-valid\", \"1\");\r\n    } else {\r\n        el.style.color = \"red\";\r\n        el.setAttribute(\"is-valid\", \"0\");\r\n    }\r\n}\r\n\r\nfunction buttonHandler(e) {\r\n    const isAllValid = validInputArr.every((el) => el.getAttribute(\"is-valid\") === \"1\");\r\n    if (isAllValid) {\r\n        sendFormData();\r\n    } else {\r\n        console.log('Некоторые поля заполнены неверно');\r\n    }\r\n}\r\n\r\nfunction toggleButtonState() {\r\n    const isAllFieldsValid = validInputArr.every((el) => el.getAttribute(\"is-valid\") === \"1\");\r\n    button.disabled = !isAllFieldsValid;\r\n}\r\n\r\n// Начальное состояние кнопки - отключена, если уже при загрузке есть невалидные данные\r\ntoggleButtonState();\r\n\r\nasync function sendFormData() {\r\n    const formData = new FormData(form);\r\n\r\n    try {\r\n        const response = await fetch('./mail.php', {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Ошибка на сервере: ${response.statusText}`);\r\n        }\r\n\r\n        const contentType = response.headers.get('content-type');\r\n        if (contentType && contentType.indexOf('application/json') !== -1) {\r\n            // Если ответ в формате JSON\r\n            const data = await response.json();\r\n            alert(data.message || 'Форма успешно отправлена!');\r\n        } else {\r\n            // Если ответ в другом формате\r\n            const textData = await response.text();\r\n            console.log('Сообщение сервера (текст):', textData);\r\n            alert(textData);\r\n        }\r\n\r\n        form.reset(); // Сброс формы\r\n        toggleButtonState(); // Обновление состояния кнопки после сброса\r\n    } catch (error) {\r\n        console.error('Ошибка во время отправки данных:', error.message);\r\n        alert('Произошла ошибка при отправке формы.');\r\n    }\r\n}","//imput control for phone numbers\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\tlet phoneInputs = document.querySelectorAll('input[data-tel-input]');\r\n\r\n\tlet getInputNumbersValue = function (input) {\r\n\t\t\t// Return stripped input value — just numbers\r\n\t\t\treturn input.value.replace(/\\D/g, '');\r\n\t}\r\n\r\n\tlet onPhonePaste = function (e) {\r\n\t\t\tlet input = e.target,\r\n\t\t\t\t\tinputNumbersValue = getInputNumbersValue(input);\r\n\t\t\tlet pasted = e.clipboardData || window.clipboardData;\r\n\t\t\tif (pasted) {\r\n\t\t\t\t\tlet pastedText = pasted.getData('Text');\r\n\t\t\t\t\tif (/\\D/g.test(pastedText)) {\r\n\t\t\t\t\t\t\t// Attempt to paste non-numeric symbol — remove all non-numeric symbols,\r\n\t\t\t\t\t\t\t// formatting will be in onPhoneInput handler\r\n\t\t\t\t\t\t\tinput.value = inputNumbersValue;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t}\r\n\t\tlet onPhoneInput = function (e) {\r\n\t\t\tlet input = e.target,\r\n\t\t\t\t\tinputNumbersValue = getInputNumbersValue(input),\r\n\t\t\t\t\tselectionStart = input.selectionStart,\r\n\t\t\t\t\tformattedInputValue = \"\";\r\n\r\n\t\t\tif (!inputNumbersValue) {\r\n\t\t\t\t\treturn input.value = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tif (input.value.length != selectionStart) {\r\n\t\t\t\t\t// Editing in the middle of input, not last symbol\r\n\t\t\t\t\tif (e.data && /\\D/g.test(e.data)) {\r\n\t\t\t\t\t\t\t// Attempt to input non-numeric symbol\r\n\t\t\t\t\t\t\tinput.value = inputNumbersValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ([\"7\", \"8\", \"9\"].indexOf(inputNumbersValue[0]) > -1) {\r\n\t\t\t\t\tif (inputNumbersValue[0] == \"9\") inputNumbersValue = \"7\" + inputNumbersValue;\r\n\t\t\t\t\tlet firstSymbols = (inputNumbersValue[0] == \"8\") ? \"8\" : \"+7\";\r\n\t\t\t\t\tformattedInputValue = input.value = firstSymbols + \" \";\r\n\t\t\t\t\tif (inputNumbersValue.length > 1) {\r\n\t\t\t\t\t\t\tformattedInputValue += '(' + inputNumbersValue.substring(1, 4);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (inputNumbersValue.length >= 5) {\r\n\t\t\t\t\t\t\tformattedInputValue += ') ' + inputNumbersValue.substring(4, 7);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (inputNumbersValue.length >= 8) {\r\n\t\t\t\t\t\t\tformattedInputValue += '-' + inputNumbersValue.substring(7, 9);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (inputNumbersValue.length >= 10) {\r\n\t\t\t\t\t\t\tformattedInputValue += '-' + inputNumbersValue.substring(9, 11);\r\n\t\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t\tformattedInputValue = '+' + inputNumbersValue.substring(0, 16);\r\n\t\t\t}\r\n\t\t\tinput.value = formattedInputValue;\r\n\t}\r\n\tlet onPhoneKeyDown = function (e) {\r\n\t\t\t// Clear input after remove last symbol\r\n\t\t\tlet inputValue = e.target.value.replace(/\\D/g, '');\r\n\t\t\tif (e.keyCode == 8 && inputValue.length == 1) {\r\n\t\t\t\t\te.target.value = \"\";\r\n\t\t\t}\r\n\t}\r\n\tfor (let phoneInput of phoneInputs) {\r\n\t\t\tphoneInput.addEventListener('keydown', onPhoneKeyDown);\r\n\t\t\tphoneInput.addEventListener('input', onPhoneInput, false);\r\n\t\t\tphoneInput.addEventListener('paste', onPhonePaste, false);\r\n\t}\r\n})\r\n\r\n//imput control for phone numbers","let animateButton = function(e) {\r\n\r\n  e.preventDefault;\r\n  //reset animation\r\n  e.target.classList.remove('animate');\r\n  \r\n  e.target.classList.add('animate');\r\n  setTimeout(function(){\r\n    e.target.classList.remove('animate');\r\n  },700);\r\n};\r\n\r\nlet bubblyButtons = document.getElementsByClassName(\"button\");\r\n\r\nfor (var i = 0; i < bubblyButtons.length; i++) {\r\n  bubblyButtons[i].addEventListener('click', animateButton, false);\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))"],"names":["form","document","forms","button","querySelector","inputArr","Array","from","elements","validInputArr","buttonHandler","e","every","el","getAttribute","async","formData","FormData","response","fetch","method","body","ok","Error","statusText","contentType","headers","get","indexOf","data","json","alert","message","textData","text","console","log","reset","toggleButtonState","error","sendFormData","isAllFieldsValid","disabled","forEach","hasAttribute","setAttribute","push","addEventListener","_ref","target","inputValue","value","inputReg","isInputValid","RegExp","test","trim","style","color","inputCheck","preventDefault","call","this","phoneInputs","querySelectorAll","getInputNumbersValue","input","replace","onPhonePaste","inputNumbersValue","pasted","clipboardData","window","pastedText","getData","onPhoneInput","selectionStart","formattedInputValue","length","firstSymbols","substring","onPhoneKeyDown","keyCode","phoneInput","animateButton","classList","remove","add","setTimeout","bubblyButtons","getElementsByClassName","i","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty"],"sourceRoot":""}